import React from 'react';
declare type ConfigMaxMin = {
    max: number;
    min: number;
};
declare type ConfigAmpm = {
    am: string;
    pm: string;
};
declare type Config = {
    ampm: ConfigAmpm;
    hours: ConfigMaxMin;
    minutes: ConfigMaxMin;
};
export declare type InputAmPm = '--' | 'AM' | 'PM';
export declare type Input = {
    ampm?: InputAmPm;
    hours: '--' | string;
    minutes: '--' | string;
};
interface IProps extends React.HTMLAttributes<HTMLDivElement> {
    ariaLabels?: {
        ampm: string;
        hours: string;
        minutes: string;
        clear: string;
        timeDown: string;
        timeUp: string;
    };
    config?: {
        use12Hours: Config;
        use24Hours: Config;
    };
    disabled?: boolean;
    icon?: boolean;
    onInputChange: (values: Input) => void;
    name?: string;
    values: Input;
    spritemap?: string;
    timezone?: string;
    use12Hours?: boolean;
}
declare const ClayTimePicker: React.FunctionComponent<IProps>;
export default ClayTimePicker;
