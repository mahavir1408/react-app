"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDropdownCloseInteractions = useDropdownCloseInteractions;

var _shared = require("@clayui/shared");

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */

/**
 * Hook for closing dropdown when user hits ESC key or clicks outside the menu.
 */
function useDropdownCloseInteractions(nodeRefs, setActive, focusRefOnEsc) {
  _react.default.useEffect(function () {
    var handleClick = function handleClick(event) {
      var nodes = (Array.isArray(nodeRefs) ? nodeRefs : [nodeRefs]).filter(function (ref) {
        return ref.current;
      }).map(function (ref) {
        return ref.current;
      });

      if (event.target instanceof Node && !nodes.find(function (element) {
        return element.contains(event.target);
      })) {
        setActive(false);
      }
    };

    var handleEsc = function handleEsc(event) {
      if (event.key === _shared.Keys.Esc) {
        if (focusRefOnEsc && focusRefOnEsc.current) {
          focusRefOnEsc.current.focus();
        }

        return setActive(false);
      }
    };

    window.addEventListener('mousedown', handleClick);
    window.addEventListener('keydown', handleEsc);
    return function () {
      window.removeEventListener('mousedown', handleClick);
      window.removeEventListener('keydown', handleEsc);
    };
  }, []);
}