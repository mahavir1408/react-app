import React from 'react';
import Action from './Action';
import Caption from './Caption';
import Divider from './Divider';
import Group from './Group';
import Help from './Help';
import Item from './Item';
import ItemList from './ItemList';
import Menu, { Align } from './Menu';
import Search from './Search';
import Section from './Section';
interface IProps extends React.HTMLAttributes<HTMLDivElement | HTMLLIElement> {
    active: boolean;
    alignmentPosition?: React.ComponentProps<typeof Menu>['alignmentPosition'];
    containerElement?: React.JSXElementConstructor<any> | 'div' | 'li';
    hasRightSymbols?: boolean;
    hasLeftSymbols?: boolean;
    menuElementAttrs?: React.HTMLAttributes<HTMLDivElement>;
    onActiveChange: (val: boolean) => void;
    offsetFn?: React.ComponentProps<typeof Menu>['offsetFn'];
    trigger: React.ReactElement & {
        ref?: (node: HTMLButtonElement | null) => void;
    };
}
declare const ClayDropDown: React.FunctionComponent<IProps> & {
    Action: typeof Action;
    Caption: typeof Caption;
    Divider: typeof Divider;
    Group: typeof Group;
    Help: typeof Help;
    Item: typeof Item;
    ItemList: typeof ItemList;
    Menu: typeof Menu;
    Search: typeof Search;
    Section: typeof Section;
};
export { Align };
export default ClayDropDown;
