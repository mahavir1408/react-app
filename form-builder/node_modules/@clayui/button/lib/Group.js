"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ClayButtonGroup = function ClayButtonGroup(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$role = _ref.role,
      role = _ref$role === void 0 ? 'group' : _ref$role,
      spaced = _ref.spaced,
      otherProps = _objectWithoutProperties(_ref, ["children", "className", "role", "spaced"]);

  return /*#__PURE__*/_react.default.createElement("div", _extends({}, otherProps, {
    className: (0, _classnames.default)(className, 'btn-group'),
    role: role
  }), spaced ? _react.default.Children.map(children, function (child, i) {
    return /*#__PURE__*/_react.default.cloneElement( /*#__PURE__*/_react.default.createElement("div", {
      className: "btn-group-item"
    }, child), {
      key: i
    });
  }) : children);
};

var _default = ClayButtonGroup;
exports.default = _default;